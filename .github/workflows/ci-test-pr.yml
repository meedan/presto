name: Build and Run Integration Test

on:
  pull_request

permissions:
  id-token: write
  contents: read

jobs:
  integration-test:
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ vars.AWS_OIDC_ROLE_TO_ASSUME }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v3

    - name: Cache Docker layers
      uses: actions/cache@v2
      id: cache
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Docker Buildx (build)
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ github.event.repository.name }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --load \
          --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          --file ./Dockerfile ./
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Run PR Tests
      id: run-tests
      env:
        GIT_SHA: ${{ github.sha }}
        BUILD_NUMBER: ${{ github.run_number }}
      run: |
        if [[ "${{ github.event.pull_request.head.repo.fork }}" == "true" ]]; then
          # docker run --rm  ${{ steps.build-image.outputs.image }} -e APP=presto -e DEPLOY_ENV=test -e GITHUB_TOKEN=none make run_test
          echo "test not enabled for forks!"
        else
          docker run -e APP=presto -e DEPLOY_ENV=test -e GITHUB_TOKEN=none --rm  ${{ steps.build-image.outputs.image }} make run_test
        fi

    - name: Reset cache
      id: reset-cache
      if: ${{ failure() || success() }}
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
